name: nuxt-chiffre CI/CD

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm install
      - name: Check dependencies
        run: npm audit --production
      - name: Check code lint
        run: npm run lint
      - name: Run tests
        run: npm test
      - name: Publish code coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-12.x-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: Build package
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: build
          path: dist
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
